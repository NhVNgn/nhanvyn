{"version":3,"file":"component---src-pages-404-js-12caaddf3cba9c59c96a.js","mappings":"2JAkDA,IA1Ce,IAAwB,IAAvB,cAAEA,GAAe,EAc/B,OAJAC,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAIH,EAAcI,QAAS,YAAY,GAC9C,IAGD,uBAAKC,UAAU,UACb,uBAAKA,UAAU,qBACb,0BACE,mCAIA,sBAAIC,QAAS,KAAMC,OArBHC,EAqBkBR,OApBxCS,OAAOC,SAAS,CACdC,IAAKH,EAAWJ,QAAQQ,UAAY,IACpCC,SAAU,WAHUL,KAqBiC,iBAIjD,qCAIA,oCAGA,uCAKA,C,uDCOV,IAxCe,IAAmB,IAAlB,SAAEM,GAAU,GACbC,EAAAA,EAAAA,gBAAe,cAU5B,OAEE,uBAAKV,UAAU,MACb,uBACEW,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,qBACRC,OAAO,qBACPC,gBAAgB,UAGlB,4BAAOP,GACP,0BACEE,MAAO,CACLM,UAAU,iBACVC,SAAS,mBACT,MAEC,IAAIC,MAAOC,cAAa,oBAE3B,qBAAGC,KAAK,4BAA0B,YAGlC,C,+CCJV,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEd,GAAU,EAC3C,MAAM,KAAEe,IAASd,EAAAA,EAAAA,gBAAe,YAc1Be,EAAkBH,GAAeE,EAAKE,aAAaJ,YACnDK,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBH,MAExC,OACE,gCACE,6BAAQI,EAAkBJ,EAAK,MAAMI,EAAiBJ,GACtD,wBAAMK,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASN,IACnC,wBAAMO,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAL,EAAKE,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASN,IACpC,wBAAMK,KAAK,sBAAsBC,QAASJ,IACzChB,EAGP,C,kGCrCA,MAOauB,EAAO,IAAM,gBAAC,IAAG,CAACT,MAAM,mBAErC,UATqB,IACnB,gBAAC,IAAM,KACL,4CACA,oF","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./header.css\"\r\nimport { useRef, useEffect } from \"react\"\r\n\r\n\r\n\r\n\r\nconst Header = ({ experienceRef }) => {\r\n  const srollToSection = (elementRef) => {\r\n    window.scrollTo({\r\n      top: elementRef.current.offsetTop - 100,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(experienceRef.current, 'header.js');\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <nav className=\"navigationWrapper\">\r\n        <ul>\r\n          <li>\r\n            About\r\n          </li>\r\n          \r\n          <li onClick={() => srollToSection(experienceRef)}>\r\n            Experience\r\n          </li>\r\n\r\n          <li>\r\n            Project\r\n          </li>\r\n\r\n          <li>\r\n            Resume\r\n          </li>\r\n          <li>\r\n            Contact\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Header;","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    \r\n    <div className=\"bg\">\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n          border: `0.4px dashed black`,\r\n          backgroundColor: `white`\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n \r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <h1>404: Not Found</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n"],"names":["experienceRef","useEffect","console","log","current","className","onClick","srollToSection","elementRef","window","scrollTo","top","offsetTop","behavior","children","useStaticQuery","style","margin","maxWidth","padding","border","backgroundColor","marginTop","fontSize","Date","getFullYear","href","description","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head"],"sourceRoot":""}